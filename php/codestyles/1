#### PSR-2代码样式
    
&emsp;&emsp;这个section是基础代码规范(PSR-1)的继承和扩展.

&emsp;&emsp;为了尽可能的提升阅读别人代码的效率，下面列举了一系列的通用规则，特别是关于PHP代码风格的。当开发者们在多个项目中合作时，本指南将会成日所有这些项目中共同的一组代码规范.

#### 1.概述

* 代码`必须`遵守PSR-1

* 代码`必须`使用四个空格来进行缩进，而不是制表符

* 一行代码的长度`不建议`有硬限制，软限制`必须`为120个字符，`建议`每行代码80个字符或者更少

* 在命名空间的申明下面`必须`有一个空行，而且在use的申明下面也必须有一个空行

* 类的左花括号`必须`放在其申明下面自称一行，右花括号则必须放在类主体的下面自成一行

* 方法(method)的左花括号`必须`放在其申明下面自成一行，右花括号则`必须`放在方法主体的下一行

* 所有的属性属性(property)和方法(method)`必须`有可访问的申明,抽象(abstract)和终结(final)申明必须在可访问的申明之前，而金泰申明必须在可访问申明之后

* 在控制结构的关键字后面`必须`有一个空格；而方法(method)和函数(function)的关键字后面`不能`有空格

* 控制结果的做花括号`必须`和其放在同一行，右花括号`必须`放在该控制结构代码主题的下一行

* 控制结果的左括号之后不可有空格,右花括号之前也不可以有空格

#### 1.1示例

这个示例展示了上下文提到的一些规则:

```
<?php
namespace Vendor\Package;

use BarCLass as Bar;
use FooInterface;

class Foo extends Bar implements FooInterface
{
    public function sample sampleFunction($a, $b = null)
    {
        if ($a === $b) {
            bar();
        } elseif {
            $foo->var($arg1);
        } else {
            Bar::bar($arg1);
        }
    }

    final public static function bar()
    {
        // 方法主体
    }
}
```
